load("trend_analysis.RData")
values <- colnames(rf)
shiny::runApp()
as.formula(paste("input$DepPrm"," ~ ", paste("input$IndPrm", collapse="+")))
?paste
frml <- as.formula(paste("input$DepPrm"," ~ ", paste("input$IndPrm", collapse="+")))
frml
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
?checkboxGroupInput
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
str(rf)
as.factor(rf[, 9:13])
paste()
?paste
paste(month.abb, nth, sep = ": ", collapse = "; ")
## When passing a single vector, paste0 and paste work like as.character.
paste0(1:12)
paste(1:12)        # same
as.character(1:12) # same
## If you pass several vectors to paste0, they are concatenated in a
## vectorized way.
(nth <- paste0(1:12, c("st", "nd", "rd", rep("th", 9))))
## paste works the same, but separates each input with a space.
## Notice that the recycling rules make every input as long as the longest input.
paste(month.abb, "is the", nth, "month of the year.")
paste(month.abb, letters)
## You can change the separator by passing a sep argument
## which can be multiple characters.
paste(month.abb, "is the", nth, "month of the year.", sep = "_*_")
## To collapse the output into a single string, pass a collapse argument.
paste0(nth, collapse = ", ")
## For inputs of length 1, use the sep argument rather than collapse
paste("1st", "2nd", "3rd", collapse = ", ") # probably not what you wanted
paste("1st", "2nd", "3rd", sep = ", ")
## You can combine the sep and collapse arguments together.
paste(month.abb, nth, sep = ": ", collapse = "; ")
month.abb
nth
shiny::runApp()
shiny::runApp()
shiny::runApp()
values
values - "YEAR"
values[values != "YEAR"]
shiny::runApp()
as.formula(paste("input$dep_prm"," ~ time(", "input$dep_prm", ") + ",
paste("input$ind_prm", sep = "+ as.factor(",
collapse=") * time(input$dep_prm)")))
paste("input$ind_prm", sep = "+ as.factor(",
collapse=") * time(input$dep_prm)")
as.formula(paste("input$dep_prm"," ~ time(", "input$dep_prm",
paste("as.factor(", "input$ind_prm", collapse=") * time(input$dep_prm)")))
as.formula(paste("input$dep_prm"," ~ time(", "input$dep_prm",
paste("+ as.factor(", "input$ind_prm", collapse=") * time(input$dep_prm)")))
paste("input$dep_prm"," ~ time(", "input$dep_prm",
paste("+ as.factor(", "input$ind_prm", collapse=") * time(input$dep_prm)"))
as.formula(paste("input$dep_prm"," ~ time(", "input$dep_prm", ")",
paste("+ as.factor(", "input$ind_prm", collapse=") * time(input$dep_prm)")))
as.formula(paste0("input$dep_prm"," ~ time(", "input$dep_prm", ")",
paste0("+ as.factor(", "input$ind_prm", collapse=") * time(input$dep_prm)")))
shiny::runApp()
shiny::runApp()
as.formula(paste0("input$dep_prm"," ~ time(", "input$dep_prm", ")",
paste0("+ as.factor(", "input$ind_prm", collapse=") * time(", "input$dep_prm", ")")))
as.formula(paste0("input$dep_prm"," ~ time(", "input$dep_prm", ")",
paste0("+ as.factor(", "input$ind_prm", collapse=paste0(") * time(", "input$dep_prm", ")"))))
paste0(") * time(", "input$dep_prm", ")")
paste0("+ as.factor(", "input$ind_prm", collapse=paste0(") * time(", "input$dep_prm", ")"))
paste0("+ as.factor(", "input$ind_prm", collapse=paste0(") * time(", "input$dep_prm", ")")))
paste0("+ as.factor(", "input$ind_prm", collapse=paste0(") * time(", "input$dep_prm", ")"))
as.formula(paste0("input$dep_prm"," ~ time(", "input$dep_prm", ")",
paste0("+ as.factor(", "input$ind_prm", ") * time(", "input$dep_prm", ")")))
shiny::runApp()
str(rf)
which(colnames(rf),  "M1")
which(colnames(rf) ==  "M1")
which(colnames(rf) ==  "mnth")
which(colnames(rf) ==  "LaNina")
str(rf)
for(i in c(9, 15:34)){
rf[, i] <- as.factor(rf[, i] )
}
str(rf)
shiny::runApp()
shiny::runApp()
ggplot(rf, aes(x = mnth, y = P_MEAN_NEW, colour = as.factor(Season))) +
geom_bar(stat = "identity", position = "dodge") +
xlab("Year") +
ylab("Precipitation")
library(shiny)
library(dplR)
library(ggplot2)
library(multitaper)
library(quantreg)
library(tseries)
load("trend_analysis.RData")
values <- colnames(rf[colnames(rf) != "YEAR"])
str(rf)
for(i in c(9, 15:34)){
rf[, i] <- as.factor(rf[, i] )
}
ggplot(rf, aes(x = mnth, y = P_MEAN_NEW, colour = as.factor(Season))) +
geom_bar(stat = "identity", position = "dodge") +
xlab("Year") +
ylab("Precipitation")
ggplot(rf, aes(x = YEAR, y = P_MEAN_NEW, colour = as.factor(Season))) +
geom_bar(stat = "identity", position = "dodge") +
xlab("Year") +
ylab("Precipitation")
ggplot(rf, aes(x = YEAR, y = P_MEAN_NEW)) +
geom_bar(stat = "identity", position = "dodge") +
xlab("Year") +
ylab("Precipitation")
ylab("Precipitation")
rflm = lm(rf$P_MEAN_NEW~time(rf$YEAR)+rf$mnth*time(rf$YEAR))
summary(rflm
)
plot(rf$P_MEAN_NEW ~ time(rf$YEAR))
lines(log10(X)[Country=="N"],fitted(rflm)[mnth=="2"], lwd=2, col="red")
lines(time(rf$YEAR)[rf$mnth=="2"],fitted(rflm)[rf$mnth=="2"], lwd=2, col="red")
ggplot(rf, aes(x = time(YEAR), y = P_MEAN_NEW)) +
geom_bar(stat = "identity", position = "dodge") +
xlab("Year") +
ylab("Precipitation")
fitted(rflm)[rf$mnth=="2"]
str(rflm)
ggplot(rf, aes(x = time(YEAR), y = P_MEAN_NEW)) +
geom_bar(stat = "identity", position = "dodge") +
geom_line(data = rflm, aes(x = model$time, y = fitted(rflm)[rf$mnth=="2"])) +
xlab("Year") +
ylab("Precipitation")
ggplot(rf, aes(x = time(YEAR), y = P_MEAN_NEW)) +
geom_bar(stat = "identity", position = "dodge") +
geom_line(data = rflm, aes(x = time, y = fitted(rflm)[rf$mnth=="2"])) +
xlab("Year") +
ylab("Precipitation")
rflm$model$`time(rf$YEAR)`
rflm$`time(rf$YEAR)`
geom_line(data = rflm, aes(x = model$`time(rf$YEAR)`, y = fitted(rflm)[rf$mnth=="2"])) +
xlab("Year") +
ggplot(rf, aes(x = time(YEAR), y = P_MEAN_NEW)) +
geom_bar(stat = "identity", position = "dodge") +
geom_line(data = rflm, aes(x = model$`time(rf$YEAR)`, y = fitted(rflm)[rf$mnth=="2"])) +
xlab("Year") +
ylab("Precipitation")
ggplot(rf, aes(x = time(YEAR), y = P_MEAN_NEW)) +
geom_bar(stat = "identity", position = "dodge") +
geom_line(data = rflm, aes(x = time(rf$YEAR), y = fitted(rflm)[rf$mnth=="2"])) +
xlab("Year") +
ylab("Precipitation")
time(rf$YEAR)
fitted(rflm)[rf$mnth=="2"])
ggplot(rf, aes(x = time(YEAR), y = P_MEAN_NEW)) +
geom_bar(stat = "identity", position = "dodge") +
geom_line(aes(x = time(rf$YEAR)[rf$mnth=="2"], y = fitted(rflm)[rf$mnth=="2"])) +
xlab("Year") +
ylab("Precipitation")
summary(rflm())
summary(rflm
)
?geom_abline
rflm
coefficients(rflm)
coefficients(rflm)$Intercept
str(coefficients(rflm))
str(rflm)
rfcmb <- cbind(rf, pred = predict(rflm))
ggplot(rfcm, aes(x = time(YEAR), y = P_MEAN_NEW)) +
geom_bar(stat = "identity", position = "dodge") +
geom_line(aes(y = pred)) +
xlab("Year") +
ylab("Precipitation")
rfcmb <- cbind(rf, pred = predict(rflm))
ggplot(rfcmb, aes(x = time(YEAR), y = P_MEAN_NEW)) +
geom_bar(stat = "identity", position = "dodge") +
geom_line(aes(y = pred)) +
xlab("Year") +
ylab("Precipitation")
ggplot(rfcmb, aes(x = time(YEAR), y = P_MEAN_NEW, color = mnth)) +
geom_bar(stat = "identity", position = "dodge") +
geom_line(aes(y = pred)) +
xlab("Year") +
ylab("Precipitation")
ggplot(rfcmb, aes(x = time(YEAR), y = P_MEAN_NEW)) +
geom_bar(stat = "identity", position = "dodge") +
geom_line(aes(y = pred, color = mnth)) +
xlab("Year") +
ylab("Precipitation")
?rflm
rflm
summary(rflm)
str(rfcmb)
predict(rflm)
ggplot(rfcmb, aes(x = time(YEAR), y = P_MEAN_NEW)) +
geom_bar(stat = "identity", position = "dodge") +
geom_line(aes(y = pred, color = c(mnth, ENSO))) +
xlab("Year") +
ylab("Precipitation")
ggplot(rfcmb, aes(x = time(YEAR), y = P_MEAN_NEW)) +
geom_bar(stat = "identity", position = "dodge") +
geom_line(aes(y = pred, color = interaction(mnth, ENSO))) +
xlab("Year") +
ylab("Precipitation")
ggplot(rfcmb, aes(x = time(YEAR), y = P_MEAN_NEW)) +
geom_bar(stat = "identity", position = "dodge") +
geom_line(aes(y = pred, color = interaction(mnth))) +
xlab("Year") +
ylab("Precipitation")
ggplot(rfcmb, aes(x = time(YEAR), y = P_MEAN_NEW)) +
geom_bar(stat = "identity", position = "dodge") +
geom_line(aes(y = pred, color = mnth)) +
xlab("Year") +
ylab("Precipitation")
shiny::runApp()
shiny::runApp()
shiny::runApp()
rflm
str(rflm)
shiny::runApp()
shiny::runApp()
str(rf)
shiny::runApp()
shiny::runApp()
input = data.frame(dep_prm = "P_MEAN_NEW", idp_prm = c("drywet", "IOD"))
as.formula(paste0(input$dep_prm," ~ time(", input$dep_prm, ")",
paste0(input$ind_prm, sep = "+ ",
collapse = paste0(" * time(", input$dep_prm, ")"))))
input$dep_prm," ~ time(", input$dep_prm, ")"
paste0(input$dep_prm," ~ time(", input$dep_prm, ")"
)
input$dep_prm
input
input = list(dep_prm = "P_MEAN_NEW", idp_prm = c("drywet", "IOD"))
paste0(input$dep_prm," ~ time(", input$dep_prm, ")"
)
paste0(input$ind_prm, sep = "+ ",
collapse = paste0(" * time(", input$dep_prm, ")"))
input$ind_prm
input = list(dep_prm = "P_MEAN_NEW", ind_prm = c("drywet", "IOD"))
as.formula(paste0(input$dep_prm," ~ time(", input$dep_prm, ")",
paste0(input$ind_prm, sep = "+ ",
collapse = paste0(" * time(", input$dep_prm, ")"))))
as.formula(paste0(input$dep_prm," ~ time(", input$dep_prm, ") + ",
paste0(input$ind_prm, sep = "+ ",
collapse = paste0(" * time(", input$dep_prm, ")"))))
paste0(input$dep_prm," ~ time(", input$dep_prm, ") + ",
paste0(input$ind_prm, sep = "+ ",
collapse = paste0(" * time(", input$dep_prm, ")")))
paste0(input$dep_prm," ~ time(", input$dep_prm, ") ",
paste0(input$ind_prm,
collapse = paste0(" * time(", input$dep_prm, ")")))
input$ind_prm
paste0(input$dep_prm," ~ time(", input$dep_prm, ") ",
paste0(input$ind_prm, sep = paste0(" * time(", input$dep_prm, ") + ")))
paste0(" * time(", input$dep_prm, ") + ")
paste0(input$ind_prm, sep = paste0(" * time(", input$dep_prm, ") + "))
paste0(" * time(", input$dep_prm, ") + ")
paste0(input$ind_prm, sep = paste0(" * time(", input$dep_prm, ") + "))
paste0(input$ind_prm, collapse = paste0(" * time(", input$dep_prm, ") + ")))
paste0(input$ind_prm, collapse = paste0(" * time(", input$dep_prm, ") + "))
paste0(input$dep_prm," ~ time(", input$dep_prm, ") ",
paste0(input$ind_prm, collapse = paste0(" * time(", input$dep_prm, ") + ")),
paste0(" * time(", input$dep_prm, ") + "))
as.formula(paste0(input$dep_prm," ~ time(", input$dep_prm, ") +",
paste0(input$ind_prm, collapse = paste0(" * time(", input$dep_prm, ") + ")),
paste0(" * time(", input$dep_prm, ")")))
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
