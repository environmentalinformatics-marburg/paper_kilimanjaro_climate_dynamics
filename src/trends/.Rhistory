load("trend_analysis.RData")
values <- colnames(rf)
shiny::runApp()
as.formula(paste("input$DepPrm"," ~ ", paste("input$IndPrm", collapse="+")))
?paste
frml <- as.formula(paste("input$DepPrm"," ~ ", paste("input$IndPrm", collapse="+")))
frml
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
?checkboxGroupInput
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
str(rf)
as.factor(rf[, 9:13])
paste()
?paste
paste(month.abb, nth, sep = ": ", collapse = "; ")
## When passing a single vector, paste0 and paste work like as.character.
paste0(1:12)
paste(1:12)        # same
as.character(1:12) # same
## If you pass several vectors to paste0, they are concatenated in a
## vectorized way.
(nth <- paste0(1:12, c("st", "nd", "rd", rep("th", 9))))
## paste works the same, but separates each input with a space.
## Notice that the recycling rules make every input as long as the longest input.
paste(month.abb, "is the", nth, "month of the year.")
paste(month.abb, letters)
## You can change the separator by passing a sep argument
## which can be multiple characters.
paste(month.abb, "is the", nth, "month of the year.", sep = "_*_")
## To collapse the output into a single string, pass a collapse argument.
paste0(nth, collapse = ", ")
## For inputs of length 1, use the sep argument rather than collapse
paste("1st", "2nd", "3rd", collapse = ", ") # probably not what you wanted
paste("1st", "2nd", "3rd", sep = ", ")
## You can combine the sep and collapse arguments together.
paste(month.abb, nth, sep = ": ", collapse = "; ")
month.abb
nth
shiny::runApp()
shiny::runApp()
shiny::runApp()
values
values - "YEAR"
values[values != "YEAR"]
shiny::runApp()
as.formula(paste("input$dep_prm"," ~ time(", "input$dep_prm", ") + ",
paste("input$ind_prm", sep = "+ as.factor(",
collapse=") * time(input$dep_prm)")))
paste("input$ind_prm", sep = "+ as.factor(",
collapse=") * time(input$dep_prm)")
as.formula(paste("input$dep_prm"," ~ time(", "input$dep_prm",
paste("as.factor(", "input$ind_prm", collapse=") * time(input$dep_prm)")))
as.formula(paste("input$dep_prm"," ~ time(", "input$dep_prm",
paste("+ as.factor(", "input$ind_prm", collapse=") * time(input$dep_prm)")))
paste("input$dep_prm"," ~ time(", "input$dep_prm",
paste("+ as.factor(", "input$ind_prm", collapse=") * time(input$dep_prm)"))
as.formula(paste("input$dep_prm"," ~ time(", "input$dep_prm", ")",
paste("+ as.factor(", "input$ind_prm", collapse=") * time(input$dep_prm)")))
as.formula(paste0("input$dep_prm"," ~ time(", "input$dep_prm", ")",
paste0("+ as.factor(", "input$ind_prm", collapse=") * time(input$dep_prm)")))
shiny::runApp()
shiny::runApp()
as.formula(paste0("input$dep_prm"," ~ time(", "input$dep_prm", ")",
paste0("+ as.factor(", "input$ind_prm", collapse=") * time(", "input$dep_prm", ")")))
as.formula(paste0("input$dep_prm"," ~ time(", "input$dep_prm", ")",
paste0("+ as.factor(", "input$ind_prm", collapse=paste0(") * time(", "input$dep_prm", ")"))))
paste0(") * time(", "input$dep_prm", ")")
paste0("+ as.factor(", "input$ind_prm", collapse=paste0(") * time(", "input$dep_prm", ")"))
paste0("+ as.factor(", "input$ind_prm", collapse=paste0(") * time(", "input$dep_prm", ")")))
paste0("+ as.factor(", "input$ind_prm", collapse=paste0(") * time(", "input$dep_prm", ")"))
as.formula(paste0("input$dep_prm"," ~ time(", "input$dep_prm", ")",
paste0("+ as.factor(", "input$ind_prm", ") * time(", "input$dep_prm", ")")))
shiny::runApp()
str(rf)
which(colnames(rf),  "M1")
which(colnames(rf) ==  "M1")
which(colnames(rf) ==  "mnth")
which(colnames(rf) ==  "LaNina")
str(rf)
for(i in c(9, 15:34)){
rf[, i] <- as.factor(rf[, i] )
}
str(rf)
shiny::runApp()
